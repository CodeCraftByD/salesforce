/************************************************************************************
 * Copyright by Autodesk, Inc.
 * 
 * The information contained herein is confidential, proprietary to
 * Autodesk, Inc., and considered a trade secret as defined in section
 * 499C of the penal code of the State of California. Use of
 * this information by anyone other than authorized employees of 
 * Autodesk, Inc. is granted only under a written non-disclosure
 * agreement, expressly prescribing the scope and manner of such use.
 * 
 * $Id$ : ROM_GenerateRenewalOpportunityBatchTest
 * $Created Date$ : 03/01/2014
 * $Author$ : Chaithanya Godla
 * $Description$ : This class contains unit tests for validating the behavior of Apex class: ROM_GenerateRenewalOpportunityBatch.
 *************************************************************************************************/
 
@isTest (seeAllData = false)
private class ROM_GenerateRenewalOpportunityBatchTest {
    
    @testSetup static void setupData() {
        ADSK_SyncUtil.skipSyncToSiebel = True;
        List<Account> accountList = new List<Account>();
        List<Contact> contactList = new List<Contact>();
        List<AccountContactRole> accountContactRoleList = new List<AccountContactRole>();
        List<User> users = new List<User>();
        List<Account_Associations__c> associations = new List<Account_Associations__c>();
        List<Product2> products = new List<Product2>();
        List<Asset__c> assets = new List<Asset__c>();
        List<ServiceContract> contracts = new List<ServiceContract>();
        List<ContractLineItem> ContractLineItems = new List<ContractLineItem>();
        List<Entitlement> entitlements = new List<Entitlement>();
        
        String customerAccount1CSN = 'custAc1CSN';
        String customerAccount2CSN = 'custAc2CSN';
        String resellerAccount1CSN = 'resAc1CSN';
        String resellerAccount2CSN = 'resAc2CSN';
        String soldToAccount1CSN = 'soldAc1CSN';
        String unrelatedResellerAccount1CSN = 'unReAc1CSN';
        String unrelatedDistributorAccount1CSN = 'unDiAc1CSN';
        String noDealerAccountCSN = '5070100022';
        
        Profile[] p1 = [select Id from Profile where Name = 'System Administrator' limit 1];
        
        Id adminUserId = UserInfo.getUserId();
        
        //Create Test Accounts
        Account customerAccount1 = TestUtilityClass.createTestAccountRec('NewAccount');
        customerAccount1.Account_CSN__c = customerAccount1CSN;
        customerAccount1.Type = 'End Customer';
        customerAccount1.Country_Picklist__c = 'United States';

        Account customerAccount2 = TestUtilityClass.createTestAccountRec('NewAccount');
        customerAccount2.Account_CSN__c = customerAccount2CSN;
        customerAccount2.Type = 'End Customer';
        customerAccount2.Country_Picklist__c = 'States';

        Account resellerAccount1 = TestUtilityClass.createTestAccountRec('NewAccount');
        resellerAccount1.Account_CSN__c = resellerAccount1CSN;
        resellerAccount1.Type = 'Reseller';
        resellerAccount1.Partner_Type__c = 'Reseller';
        resellerAccount1.Partner_Hierarchy__c = 'Domestic Ultimate';
        resellerAccount1.ispartner__c = true;
        resellerAccount1.Customer_Account_Group__c = 'Ship-To Party';
        resellerAccount1.CPM_Admin_User__c = adminUserId;
        resellerAccount1.Country_Picklist__c = 'United States';

        Account resellerAccount2 = TestUtilityClass.createTestAccountRec('NewAccount');
        resellerAccount2.Account_CSN__c = resellerAccount2CSN;
        resellerAccount2.Type = 'Reseller';
        resellerAccount2.Partner_Type__c = 'Reseller';
        resellerAccount2.Partner_Hierarchy__c = 'Domestic Ultimate';
        resellerAccount2.ispartner__c = true;
        resellerAccount2.Customer_Account_Group__c = 'Sold-To Party';
        resellerAccount2.CPM_Admin_User__c = adminUserId;
        resellerAccount2.Country_Picklist__c = 'United States';

        Account soldToAccount1 = TestUtilityClass.createTestAccountRec('NewAccount');
        soldToAccount1.Account_CSN__c = soldToAccount1CSN;
        soldToAccount1.Type = 'Distributor';
        soldToAccount1.Partner_Type__c = 'Distributor';
        soldToAccount1.Partner_Hierarchy__c = 'Domestic Ultimate';
        soldToAccount1.ispartner__c = true;
        soldToAccount1.Customer_Account_Group__c = 'Sold-To Party';
        soldToAccount1.CPM_Admin_User__c = adminUserId;
        soldToAccount1.Country_Picklist__c = 'United States';

        Account unrelatedResellerAccount1 = TestUtilityClass.createTestAccountRec('NewAccount');
        unrelatedResellerAccount1.Account_CSN__c = unrelatedResellerAccount1CSN;
        unrelatedResellerAccount1.Type = 'Reseller';
        unrelatedResellerAccount1.Partner_Type__c = 'Reseller';
        unrelatedResellerAccount1.Partner_Hierarchy__c = 'Domestic Ultimate';
        unrelatedResellerAccount1.ispartner__c = true;
        unrelatedResellerAccount1.Customer_Account_Group__c = 'Ship-To Party';
        unrelatedResellerAccount1.CPM_Admin_User__c = adminUserId;
        unrelatedResellerAccount1.Country_Picklist__c = 'United States';

        Account unrelatedSoldToAccount1 = TestUtilityClass.createTestAccountRec('NewAccount');
        unrelatedSoldToAccount1.Account_CSN__c = unrelatedDistributorAccount1CSN;
        unrelatedSoldToAccount1.Type = 'Distributor';
        unrelatedSoldToAccount1.Partner_Type__c = 'Distributor';
        unrelatedSoldToAccount1.Partner_Hierarchy__c = 'Domestic Ultimate';
        unrelatedSoldToAccount1.ispartner__c = true;
        unrelatedSoldToAccount1.Customer_Account_Group__c = 'Sold-To Party';
        unrelatedSoldToAccount1.CPM_Admin_User__c = adminUserId;
        unrelatedSoldToAccount1.Country_Picklist__c = 'United States';
        
        Account noDealerAccount = TestUtilityClass.createTestAccountRec('NewAccount');
        noDealerAccount.Account_CSN__c = noDealerAccountCSN;
        noDealerAccount.Country_Picklist__c = 'United States';
        

        accountList.add(customerAccount1);
        accountList.add(resellerAccount1);
        accountList.add(soldToAccount1);
        accountList.add(unrelatedResellerAccount1);
        accountList.add(unrelatedSoldToAccount1);
        accountList.add(resellerAccount2);
        accountList.add(noDealerAccount);
        accountList.add(customerAccount2);
        insert accountList;
        
        System.debug('accountList : ' + accountList);

        //Creating Test Contacts
        Contact customerAccount1Contact1 = TestUtilityClass.createTestContact(customerAccount1.Id, 'NewContact');
        customerAccount1Contact1.FirstName = 'Spider';
        customerAccount1Contact1.Contact_CSN__c = '111111111';
        customerAccount1Contact1.LastName = 'Man';

        Contact customerAccount2Contact2 = TestUtilityClass.createTestContact(customerAccount2.Id, 'NewContact');
        customerAccount2Contact2.FirstName = 'Spider1';
        customerAccount2Contact2.Contact_CSN__c = '222222222';
        customerAccount2Contact2.LastName = 'Man1';

        Contact resellerAccount1Contact1 = TestUtilityClass.createTestContact(resellerAccount1.Id, 'NewContact');
        resellerAccount1Contact1.FirstName = 'Bat';
        resellerAccount1Contact1.Contact_CSN__c = '333333333';
        resellerAccount1Contact1.LastName = 'Man';

        Contact soldToAccount1Contact1 = TestUtilityClass.createTestContact(soldToAccount1.Id, 'NewContact');
        soldToAccount1Contact1.FirstName = 'Super';
        soldToAccount1Contact1.LastName = 'Man';
        soldToAccount1Contact1.Contact_CSN__c = '';
        soldToAccount1Contact1.ADSK_Guid__c = 'TestGUID1212';

        Contact unrelatedResellerAccount1Contact1 = TestUtilityClass.createTestContact(unrelatedResellerAccount1.Id, 'NewContact');
        unrelatedResellerAccount1Contact1.FirstName = 'Iron';
        unrelatedResellerAccount1Contact1.LastName = 'Man';
        unrelatedResellerAccount1Contact1.Contact_CSN__c = '4444444444444';

        Contact unrelatedSoldToAccount1Contact1 = TestUtilityClass.createTestContact(unrelatedSoldToAccount1.Id, 'NewContact');
        unrelatedSoldToAccount1Contact1.FirstName = 'Wonder';
        unrelatedSoldToAccount1Contact1.LastName = 'Woman';
        unrelatedSoldToAccount1Contact1.Contact_CSN__c = '5555555555555';

        Contact resellerAccount2Contact2 = TestUtilityClass.createTestContact(resellerAccount2.Id, 'NewContact');
        resellerAccount2Contact2.FirstName = 'Bats';
        resellerAccount2Contact2.LastName = 'Man';
        resellerAccount2Contact2.Contact_CSN__c = '6666666666666';
        
        Contact soldToAccount1Contact1Duplicate = TestUtilityClass.createTestContact(soldToAccount1.Id, 'NewContact');
        soldToAccount1Contact1Duplicate.FirstName = 'Super';
        soldToAccount1Contact1Duplicate.LastName = 'Man';
        soldToAccount1Contact1Duplicate.ADSK_Guid__c = 'TestGUID1212';
        soldToAccount1Contact1Duplicate.Contact_CSN__c = 'abc123123';

        contactList.add(customerAccount1Contact1);
        contactList.add(resellerAccount1Contact1);
        contactList.add(soldToAccount1Contact1);
        contactList.add(unrelatedResellerAccount1Contact1);
        contactList.add(unrelatedSoldToAccount1Contact1);
        contactList.add(resellerAccount2Contact2);
        contactList.add(soldToAccount1Contact1Duplicate);
        insert contactList;

        //Create AccountContactRoles
        AccountContactRole ac1 = new AccountContactRole(ContactId = customerAccount1Contact1.Id,
                                                        AccountId = customerAccount1.Id,
                                                        role = 'Other');
        AccountContactRole ac2 = new AccountContactRole(ContactId = resellerAccount1Contact1.Id,
                                                        AccountId = resellerAccount1.Id,
                                                        role = 'Other');
        AccountContactRole ac6 = new AccountContactRole(ContactId = resellerAccount2Contact2.Id,
                                                        AccountId = resellerAccount2.Id,
                                                        role = 'Other');
        AccountContactRole ac3 = new AccountContactRole(ContactId = soldToAccount1Contact1.Id,
                                                        AccountId = soldToAccount1.Id,
                                                        role = 'Other');
        AccountContactRole ac4 = new AccountContactRole(ContactId = unrelatedResellerAccount1Contact1.Id,
                                                        AccountId = unrelatedResellerAccount1.Id,
                                                        role = 'Other');
        AccountContactRole ac5 = new AccountContactRole(ContactId = unrelatedSoldToAccount1Contact1.Id,
                                                        AccountId = unrelatedSoldToAccount1.Id,
                                                        role = 'Other');

        accountContactRoleList.add(ac1);
        accountContactRoleList.add(ac2);
        accountContactRoleList.add(ac3);
        accountContactRoleList.add(ac4);
        accountContactRoleList.add(ac5);
        accountContactRoleList.add(ac6);
        insert accountContactRoleList;
        
        Profile p = [Select p.Name, p.Id From Profile p where p.Name =: LABEL.Partner_Finance_IVAROperations_Marketing_Sales_Service];
        //Creating Test Users
        User customerAccount1User1 = TestUtilityClass.createTestCustomerUser(customerAccount1Contact1.Id);  
        User resellerAccount1User1 = new User(LastName ='Test name',
                                              Alias ='tetest',
                                              Email ='testemail'+ ROM_TestDataUtility.generateRandomCSN()+'@testemail.com',
                                              Username ='resellerAccount1User1@ssttest.net',
                                              CommunityNickname = 'TestCommunityName156',
                                              ProfileId = p.Id,
                                              ContactId = resellerAccount1Contact1.Id,
                                              LocaleSidKey ='en_IN',
                                              EmailEncodingKey ='UTF-8',
                                              LanguageLocaleKey ='en_US',
                                              TimeZoneSidKey ='Asia/Kolkata');

        User resellerAccount2User2 = new User(LastName ='Test name1',
                                                      Alias ='tetest1',
                                                      Email ='testemail1'+ ROM_TestDataUtility.generateRandomCSN()+'@testemail.com',
                                                      Username ='testemail1'+ ROM_TestDataUtility.generateRandomCSN()+'@testemai.com',
                                                      CommunityNickname = 'TestCommunityName1178',
                                                      ProfileId = p.Id,
                                                      ContactId = resellerAccount2Contact2.Id,
                                                      LocaleSidKey ='en_IN',
                                                      EmailEncodingKey ='UTF-8',
                                                      LanguageLocaleKey ='en_US',
                                                      TimeZoneSidKey ='Asia/Kolkata');

        User soldToAccount1User1 = TestUtilityClass.createTestPartnerUser(soldToAccount1Contact1.Id); 
        soldToAccount1User1.UserName = 'soldToAccount1User1@ssttest.net';
        User unrelatedResellerAccount1User1 = TestUtilityClass.createTestPartnerUser(unrelatedResellerAccount1Contact1.Id); 
        User unrelatedSoldToAccount1User1 = TestUtilityClass.createTestPartnerUser(unrelatedSoldToAccount1Contact1.Id); 

        Users.add(customerAccount1User1);
        Users.add(resellerAccount1User1);
        Users.add(soldToAccount1User1);
        Users.add(unrelatedResellerAccount1User1);
        Users.add(unrelatedSoldToAccount1User1);
        Users.add(resellerAccount2User2);
        insert Users;
        
        
        //Creating Account Contact Associations between Partner Accounts and Customer Account
        Account_Associations__c association1 = new Account_Associations__c(Associated_Account__c = customerAccount1.id,
                                                                           Account__c = resellerAccount1.id,
                                                                           Account_Role__c = 'End Customer');
        Account_Associations__c association2 = new Account_Associations__c(Associated_Account__c = customerAccount1.id,
                                                                           Account__c = soldToAccount1.id,
                                                                           Account_Role__c = 'End Customer');

        associations.add(association1);
        associations.add(association2);
    
        insert associations;

        //Getting all the required product record types
        Map<String,Schema.RecordTypeInfo> mapRecTypeInfo = Schema.SObjectType.Product2.getRecordTypeInfosByName();

        Schema.RecordTypeInfo renewalRecordType = mapRecTypeInfo.get('Product Marketing');
        String marketingRecordTypeId = renewalRecordType.getRecordTypeId();

        renewalRecordType = mapRecTypeInfo.get('Product SKU');
        String skuRecordTypeId = renewalRecordType.getRecordTypeId();

        renewalRecordType = mapRecTypeInfo.get('Product Line');
        String productLineRecordTypeId = renewalRecordType.getRecordTypeId();
        
        String productGroup = 'pg';

        String productCode1 = 'pc1';
        String productCode2 = 'pc2';

        //Setting up Products and Skus
        Product2 TDSMaxMarketing = new Product2(Name ='Autodesk 3DS Max 2015 English', 
                                                Product_Group__c = productGroup,
                                                Primary_Product_Line__c ='Autodesk 3DS Max', 
                                                ProductCode = '3DSMAX', 
                                                Product_Row_ID__c ='TstPrdRowIdRSV--01',
                                                Alias_Name__c ='Autodesk 3DS Max 2013 English',
                                                RecordTypeID = marketingRecordTypeId,
                                                Version__c ='2015',
                                                Integration_Id__c ='3DSMAX',
                                                Int_Building_Language_Code__c ='English');  
        Product2 TDSMaxNewSKU = new Product2(Name='12800-000110-S001 Autodesk 3DS Max Autodesk Gold New', 
                                             part_number__c = '12800-000110-S001', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Material_Group__c='SUBSCRPTN',
                                             Service_Type__c='AA',
                                             Service_Sales_Type__c = 'N',
                                             Special_Sales_Program_Type__c = '',
                                             RecordTypeID = skuRecordTypeId
                                             );
        Product2 TDSMaxRenewalSKU = new Product2(Name='12800-000110-S002 Autodesk 3DS Max Autodesk Gold New', 
                                             part_number__c = '12800-000110-S002', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Material_Group__c='SUBSCRPTN',
                                             Service_Type__c='AA',
                                             Service_Sales_Type__c = 'R',
                                             Special_Sales_Program_Type__c = '',
                                             RecordTypeID = skuRecordTypeId,
                                             Org_Status__c = '1000:UR:05/31/2016;1100:UR:05/31/2016;1200:UR:05/31/2016;1320:UR:05/31/2016;2000:UR:05/31/2016;2040:UR:05/31/2016;2050:UR:05/31/2016;2060:UR:05/31/2016;2100:UR:05/31/2016;3000:RE:09/19/2016;3600:UR:05/31/2016'
                                             );
                                        
        Product2 TDSMaxRenewalSpecializationSKU = new Product2(Name='12800-000110-S002 Autodesk 3DS Max Autodesk Gold New', 
                                             part_number__c = '12800-000110-S002', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Material_Group__c='SUBSCRPTN',
                                             Service_Type__c='AA',
                                             Service_Sales_Type__c = 'R',
                                             Special_Sales_Program_Type__c = '05',
                                             RecordTypeID = skuRecordTypeId,
                                             Org_Status__c = '1000:UR:05/31/2016;1100:UR:05/31/2016;1200:UR:05/31/2016;1320:UR:05/31/2016;2000:UR:05/31/2016;2040:UR:05/31/2016;2050:UR:05/31/2016;2060:UR:05/31/2016;2100:UR:05/31/2016;3000:RE:09/19/2016;3600:UR:05/31/2016'
                                             );
        Product2 TDSMaxProductLine = new Product2(productcode = '3DSMAX',
                                                  RecordTypeID = productLineRecordTypeId,
                                                  Name = 'Autodesk 3DS Max'
                                                  ); 
        Product2 TDSMaxNewDSTSKU = new Product2(Name='128F1-AJ5857-T712 Autodesk 3ds Max 2015 Multi-Lang APAC 5 - MLE3 Commercial Product Rental Plan Renewal Quarterly Windows Standalone', 
                                             part_number__c = '128F1-AJ5857-T712', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Material_Group__c='TERM_LIC',
                                             Billing_Behavior_Code__c='A100',
                                             Contract_Term_Code__c = 'A03',
                                             RecordTypeID = skuRecordTypeId,
                                             License_Model_Code__c = 'A01',
                                             Deployment_Code__c = 'S'
                                             );
                                           
        Product2 TDSMaxRenewalDSTSKU = new Product2(Name='128F1-AH9993-T975 Autodesk 3ds Max 2015 Multi-Lang AMER 5 - MLE3 Commercial Product Rental Plan Renewal Quarterly Windows Standalone', 
                                             part_number__c = '128F1-AH9993-T975', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Sales_License_Type_Code__c = 'TRN',
                                             Material_Group__c = 'TERM_LIC',                                           
                                             Billing_Behavior_Code__c='A100',
                                             Contract_Term_Code__c = 'A03',
                                             RecordTypeID = skuRecordTypeId,
                                             License_Model_Code__c = 'A01',
                                             Deployment_Code__c = 'S',
                                              Org_Status__c = '1000:UR:05/31/2016;1100:UR:05/31/2016;1200:UR:05/31/2016;1320:UR:05/31/2016;2000:UR:05/31/2016;2040:UR:05/31/2016;2050:UR:05/31/2016;2060:UR:05/31/2016;2100:UR:05/31/2016;3000:RE:09/19/2016;3600:UR:05/31/2016'
                                             );
                                          
        Product2 TDSMaxRenewalSpecializationDSTSKU = new Product2(Name='128F1-WW7980-T685 Autodesk 3ds Max 2014 Non-Language Specific Commercial Product Rental Plan Renewal Quarterly Windows Standalone', 
                                             part_number__c = '128F1-WW7980-T685', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = 'NONE', 
                                             NFR_Use__c='None',
                                             Sales_License_Type_Code__c = 'TRN',
                                             Material_Group__c = 'TERM_LIC',                                           
                                             Billing_Behavior_Code__c='A100',
                                             Contract_Term_Code__c = 'A03',
                                             RecordTypeID = skuRecordTypeId,
                                             License_Model_Code__c = 'A01',
                                             Deployment_Code__c = 'S',
                                             Special_Sales_Program_Type__c = '05',
                                              Org_Status__c = '1000:UR:05/31/2016;1100:UR:05/31/2016;1200:UR:05/31/2016;1320:UR:05/31/2016;2000:UR:05/31/2016;2040:UR:05/31/2016;2050:UR:05/31/2016;2060:UR:05/31/2016;2100:UR:05/31/2016;3000:RE:09/19/2016;3600:UR:05/31/2016'
                                             );
                                         

        Product2 TDSMaxNewDSTSKU2 = new Product2(Name='128F1-AJ5857-T712 Autodesk 3ds Max 2015 Multi-Lang APAC 5 - MLE3 Commercial Product Rental Plan Renewal Quarterly Windows Standalone', 
                                             part_number__c = '128F1-AJ5857-T712', 
                                             product_line_code__c= '3DSMAX', 
                                             Usage_Type__c='COM',
                                             Program_Type__c='None',
                                             Subscription_Level__c='GOLDA',
                                             End_User_Type__c = null, 
                                             NFR_Use__c='None',
                                             Material_Group__c='TERM_LIC',
                                             Billing_Behavior_Code__c='A100',
                                             Contract_Term_Code__c = 'A03',
                                             RecordTypeID = skuRecordTypeId,
                                             License_Model_Code__c = 'A01',
                                             Deployment_Code__c = 'S');
        Product2 autoCADLTProductLineNoSKU = new Product2(productcode = 'acdlt',
                                                  RecordTypeID = productLineRecordTypeId,
                                                  Name = 'Autodesk LT');                                       

        Products.add(TDSMaxMarketing);
        Products.add(TDSMaxNewSKU);
        Products.add(TDSMaxRenewalSKU);
        Products.add(TDSMaxRenewalSpecializationSKU);
        Products.add(TDSMaxProductLine);
        Products.add(TDSMaxNewDSTSKU);
        Products.add(TDSMaxRenewalDSTSKU);
        Products.add(TDSMaxRenewalSpecializationDSTSKU);
        Products.add(TDSMaxNewDSTSKU2);
        Products.add(autoCADLTProductLineNoSKU);
        insert products;

        //Creating Custom Asset
        Asset__c customerAccount1SubAsset1 = new Asset__c(Asset_Number__c = '1111111111111', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset1', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          SerialNumber__c='111-111111111');
        Asset__c customerAccount1SubAsset2 = new Asset__c(Asset_Number__c = '2222222222222', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset2', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          SerialNumber__c='222-222222222');
        Asset__c customerAccount1SubAsset3 = new Asset__c(Asset_Number__c = '3333333333333', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset3', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          part_number__c = '128F1-AJ5857-T712',
                                                          SerialNumber__c='333-333333333');
        Asset__c customerAccount1SubAsset4 = new Asset__c(Asset_Number__c = '4444444444444', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset4', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          part_number__c = '128F1-AJ5857-T712',
                                                          SerialNumber__c='444-444444444');

        Asset__c customerAccount1SubAsset5 = new Asset__c(Asset_Number__c = '5555555555555', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset5', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = resellerAccount2.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          part_number__c = '128F1-AJ5857-T712',
                                                          SerialNumber__c='555-555555555');
        Asset__c customerAccount1SubAsset6= new Asset__c(Asset_Number__c = '6666666666666', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset6', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          part_number__c = '128p1-AJ5857-T712',
                                                          SerialNumber__c='666-666666666');
        Asset__c customerAccount1SubAsset7= new Asset__c(Asset_Number__c = '77777777777777', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset7', 
                                                          Product_Line_Code__c = 'acdlt', 
                                                          Account__c = soldToAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = resellerAccount1.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk AutoCAD LT 2013 English',
                                                          Product_Line_Name__c='Autodesk AutoCAD LT',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          part_number__c = '128p1-AJ5857-abcd',
                                                          SerialNumber__c='777-7777777777');   
        Asset__c customerAccount1SubAsset8 = new Asset__c(Asset_Number__c = '8888888888888', 
                                                          Status__c = 'Registered', 
                                                          name = 'customerAccount1SubAsset8', 
                                                          Product_Line_Code__c = '3DSMAX', 
                                                          Account__c = customerAccount1.Id,
                                                          Contact__c = customerAccount1Contact1.Id,
                                                          Reseller_Account__c = noDealerAccount.Id, 
                                                          End_Customer_Account__c = customerAccount1.Id,
                                                          Alias_Name__c = 'Autodesk 3DS Max 2013 English',
                                                          Product_Line_Name__c='Autodesk 3DS Max',
                                                          Version__c='2015',
                                                          Language_Code__c='ENU',
                                                          Quantity__c = 1,
                                                          SerialNumber__c='888-888888888');                                                                                                                                                   


        assets.add(customerAccount1SubAsset1);
        assets.add(customerAccount1SubAsset2);
        assets.add(customerAccount1SubAsset3);
        assets.add(customerAccount1SubAsset4);
        assets.add(customerAccount1SubAsset5);
        assets.add(customerAccount1SubAsset6);
        assets.add(customerAccount1SubAsset7);
        assets.add(customerAccount1SubAsset8);
        insert assets;
        
        
        //Creating PriceBook Entries
        Id standardPBId = Test.getStandardPricebookId(); 
        
        List<PricebookEntry> standardpbes = new List<PricebookEntry>();
        
        PricebookEntry standardPriceEntry1 = new PricebookEntry(Pricebook2Id = standardPBId, Product2Id = TDSMaxProductLine.Id, UnitPrice = 0.0, IsActive = true, CurrencyIsoCode = 'USD'); 
        standardpbes.add(standardPriceEntry1);
        
        PricebookEntry standardPriceEntry2 = new PricebookEntry(Pricebook2Id = standardPBId, Product2Id = autoCADLTProductLineNoSKU.Id, UnitPrice = 0.0, IsActive = true, CurrencyIsoCode = 'USD'); 
        standardpbes.add(standardPriceEntry2);
        
        insert standardpbes;
        System.debug('standardpbes : '+standardpbes);
        
        //Service Contracts and Contract Line Item requires PricebookEntryId. 
        Pricebook2 customPB = new Pricebook2 (name = 'Partner Price Book', Description = 'General', isactive = true);
        Pricebook2 autodeskPB = new Pricebook2 (name = 'ADSK Products List', Description = 'General', isactive = true);
        Pricebook2 standardPB = new Pricebook2 (name = 'Standard Price Book', Description = 'General', isactive = true);
        insert customPB;
        insert autodeskPB;
        insert standardPB;
        System.debug('customPB : '+customPB);
        
        List<PricebookEntry> pbes = new List<PricebookEntry>();
        Pricebookentry pbe1 = new Pricebookentry();
        pbe1.pricebook2Id = customPB.Id;
        pbe1.Product2Id = TDSMaxProductLine.Id;
        pbe1.UnitPrice = 0.0;
        pbe1.Isactive = true;
        pbe1.CurrencyIsoCode = 'USD';
        pbes.add(pbe1);
        
        Pricebookentry pbe2 = new Pricebookentry();
        pbe2.pricebook2Id = customPB.Id;
        pbe2.Product2Id = autoCADLTProductLineNoSKU.Id;
        pbe2.UnitPrice = 0.0;
        pbe2.Isactive = true;
        pbe2.CurrencyIsoCode = 'USD';
        pbes.add(pbe2);
        
        Pricebookentry pbe3 = new Pricebookentry();
        pbe3.pricebook2Id = autodeskPB.Id;
        pbe3.Product2Id = TDSMaxProductLine.Id;
        pbe3.UnitPrice = 0.0;
        pbe3.Isactive = true;
        pbe3.CurrencyIsoCode = 'USD';
        pbes.add(pbe3);
        
        Pricebookentry pbe4 = new Pricebookentry();
        pbe4.pricebook2Id = standardPB.Id;
        pbe4.Product2Id = TDSMaxProductLine.Id;
        pbe4.UnitPrice = 0.0;
        pbe4.Isactive = true;
        pbe4.CurrencyIsoCode = 'USD';
        pbes.add(pbe4);
        
        Pricebookentry pbe5 = new Pricebookentry();
        pbe5.pricebook2Id = standardPB.Id;
        pbe5.Product2Id = autoCADLTProductLineNoSKU.Id;
        pbe5.UnitPrice = 0.0;
        pbe5.Isactive = true;
        pbe5.CurrencyIsoCode = 'USD';
        pbes.add(pbe5);
        
        insert pbes;
        System.debug('pbes : '+pbes);
        
        ServiceContract customerAccount1MntServiceContract1= new ServiceContract(Name='Test Contract1', 
                                                                                    Agreement_Number__c='1-1111111111',
                                                                                    PriceBook2Id = customPB.Id, 
                                                                                    AccountId = customerAccount1.Id, 
                                                                                    ContactId = customerAccount1Contact1.Id,
                                                                                    StartDate= system.today()-334, 
                                                                                    EndDate = system.today()+30,
                                                                                    Agreement_Type__c = 'Subscription',
                                                                                    Term = 12,
                                                                                    Contract_Term_UOM_Code__c = 'Year');
        ServiceContract customerAccount1DsktServiceContract1= new ServiceContract(Name='Test Contract2', 
                                                                                    Agreement_Number__c='2-2222222222',
                                                                                    PriceBook2Id = customPB.Id, 
                                                                                    ContactId = customerAccount1Contact1.Id,
                                                                                    AccountId = customerAccount1.Id, 
                                                                                    StartDate= system.today()-334, 
                                                                                    EndDate = system.today()+30,
                                                                                    Billing_Behavior_Code__c = 'A100',
                                                                                    Agreement_Type__c = 'Subscription',
                                                                                    Term = 3,
                                                                                    Contract_Term_UOM_Code__c = 'Month');
        ServiceContract customerAccount2MntServiceContract1= new ServiceContract(Name='Test Contract3', 
                                                                                    Agreement_Number__c='3-3333333333',
                                                                                    PriceBook2Id = customPB.Id, 
                                                                                    AccountId = customerAccount2.Id, 
                                                                                    ContactId = customerAccount2Contact2.Id,
                                                                                    StartDate= system.today()-334,
                                                                                    EndDate = system.today()+30,
                                                                                    Agreement_Type__c = 'Subscription',
                                                                                    Term = 12,
                                                                                    Contract_Term_UOM_Code__c = 'Year');
        ServiceContract customerAccount1MntServiceContract2= new ServiceContract(Name='Test Contract4', 
                                                                                    Agreement_Number__c='4-444444444444',
                                                                                    PriceBook2Id = customPB.Id, 
                                                                                    AccountId = customerAccount1.Id, 
                                                                                    ContactId = customerAccount1Contact1.Id,
                                                                                    StartDate= system.today()-344,
                                                                                    EndDate = system.today() + 20,
                                                                                    Agreement_Type__c = 'Subscription',
                                                                                    Term = 12,
                                                                                    Contract_Term_UOM_Code__c = 'Year');     
        ServiceContract customerAccount1MntServiceContract3= new ServiceContract(Name='Test Contract5', 
                                                                                    Agreement_Number__c='5-5555555555555',
                                                                                    PriceBook2Id = customPB.Id, 
                                                                                    AccountId = customerAccount1.Id, 
                                                                                    ContactId = customerAccount1Contact1.Id,
                                                                                    StartDate= system.today()-344, 
                                                                                    EndDate = system.today()+20,
                                                                                    Agreement_Type__c = 'Subscription',
                                                                                    Term = 12,
                                                                                    Contract_Term_UOM_Code__c = 'Year');                                                                                                                                                        

        contracts.add(customerAccount1MntServiceContract1);
        contracts.add(customerAccount1DsktServiceContract1);
        contracts.add(customerAccount2MntServiceContract1);
        contracts.add(customerAccount1MntServiceContract2);
        contracts.add(customerAccount1MntServiceContract3);
        insert contracts;
        
        //Create Standard Asset inorder to avoid Entitlement UniqueId violation
        Asset standardAsset = new Asset(name = 'teststandardAsset', 
                                        AccountId = customerAccount1.Id,
                                        Service_Contract_Row_Id__c = 'SerContId-001', 
                                        Product2Id = TDSMaxProductLine.Id);
        insert standardAsset;
        
        //Create Entitlement. Added Standard Asset field inorder to avoid Entitlement UniqueId violation
        Entitlement customerAccount1MntServiceContract1Entitlement1 = new Entitlement( Name=CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        Service_Level__c = CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        AccountId=customerAccount1.Id, 
                                                                                        AssetId = standardAsset.Id,
                                                                                        StartDate = System.today() - 334,
                                                                                        EndDate = System.today() + 30);
        Entitlement customerAccount1DsktServiceContract1Entitlement1 = new Entitlement( Name=CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        Service_Level__c = CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        AccountId=customerAccount1.Id, 
                                                                                        AssetId = standardAsset.Id,
                                                                                        StartDate = System.today() - 334,
                                                                                        EndDate = System.today() + 30);                                                                          
        Entitlement customerAccount1MntServiceContract2Entitlement1 = new Entitlement( Name=CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        Service_Level__c = CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        AccountId=customerAccount1.Id, 
                                                                                        AssetId = standardAsset.Id,
                                                                                        StartDate = System.today() - 334,
                                                                                        EndDate = System.today() + 30);          
        Entitlement customerAccount1MntServiceContract3Entitlement1 = new Entitlement( Name=CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        Service_Level__c = CaseUtility.ENTITLEMENT_LEVEL_GOLD, 
                                                                                        AccountId=customerAccount1.Id, 
                                                                                        AssetId = standardAsset.Id,
                                                                                        StartDate = System.today() - 344,
                                                                                        EndDate = System.today() + 20);                                                                                                                                                                                                                                             

        Entitlements.add(customerAccount1MntServiceContract1Entitlement1);
        Entitlements.add(customerAccount1DsktServiceContract1Entitlement1);
        Entitlements.add(customerAccount1MntServiceContract2Entitlement1);
        Entitlements.add(customerAccount1MntServiceContract3Entitlement1);
        insert Entitlements;
        
        customerAccount1MntServiceContract1Entitlement1.ServiceContractId = customerAccount1MntServiceContract1.id;
        customerAccount1DsktServiceContract1Entitlement1.ServiceContractId = customerAccount1DsktServiceContract1.id;
        customerAccount1MntServiceContract2Entitlement1.ServiceContractId = customerAccount1MntServiceContract2.id;
        customerAccount1MntServiceContract3Entitlement1.ServiceContractId = customerAccount1MntServiceContract3.id;
        update Entitlements;

        //Create Service Contract Line Item. 
        ContractLineItem customerAccount1MntServiceContract1cli1 = new ContractLineItem (ServiceContractId = customerAccount1MntServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset1.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                product_sku__c = TDSMaxNewSKU.Id,
                                                                                                Entitlement__c = customerAccount1MntServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30);
        ContractLineItem customerAccount1MntServiceContract1cli2 = new ContractLineItem (ServiceContractId = customerAccount1MntServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset2.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                product_sku__c = TDSMaxNewSKU.Id,
                                                                                                Entitlement__c = customerAccount1MntServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30);
        ContractLineItem customerAccount1DsktServiceContract1cli1 = new ContractLineItem (ServiceContractId = customerAccount1DsktServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset3.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                Entitlement__c = customerAccount1DsktServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30);
        ContractLineItem customerAccount1DsktServiceContract1cli2 = new ContractLineItem (ServiceContractId = customerAccount1DsktServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset4.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                Entitlement__c = customerAccount1DsktServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30); 

        ContractLineItem customerAccount1DsktServiceContract1cli3= new ContractLineItem (ServiceContractId = customerAccount1DsktServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset5.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                Entitlement__c = customerAccount1DsktServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30); 
        ContractLineItem customerAccount1DsktServiceContract1cli4= new ContractLineItem (ServiceContractId = customerAccount1DsktServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset6.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                Entitlement__c = customerAccount1DsktServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30); 
        ContractLineItem customerAccount1MntServiceContract2cli1 = new ContractLineItem (ServiceContractId = customerAccount1MntServiceContract2.Id,
                                                                                                Asset__c = customerAccount1SubAsset1.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                product_sku__c = TDSMaxNewSKU.Id,
                                                                                                Entitlement__c = customerAccount1MntServiceContract2Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-344,
                                                                                                EndDate = system.today()+20,
                                                                                                Actual_End_Date__c = system.today()+30);
        ContractLineItem customerAccount1DsktServiceContract1cli5= new ContractLineItem (ServiceContractId = customerAccount1DsktServiceContract1.Id,
                                                                                                Asset__c = customerAccount1SubAsset7.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                Entitlement__c = customerAccount1DsktServiceContract1Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-334,
                                                                                                EndDate = system.today()+30,
                                                                                                Actual_End_Date__c = system.today()+30); 
        ContractLineItem customerAccount1MntServiceContract3cli1 = new ContractLineItem (ServiceContractId = customerAccount1MntServiceContract3.Id,
                                                                                                Asset__c = customerAccount1SubAsset8.Id,
                                                                                                PricebookEntryId = pbes[0].Id,
                                                                                                product_sku__c = TDSMaxNewSKU.Id,
                                                                                                Entitlement__c = customerAccount1MntServiceContract3Entitlement1.Id,
                                                                                                Quantity = 7,
                                                                                                UnitPrice = 0.0,
                                                                                                StartDate= system.today()-344,
                                                                                                EndDate = system.today()+20,
                                                                                                Actual_End_Date__c = system.today()+30);                                                                                                                                                                                                                                                                                                                                                             
         
        ContractLineItems.add(customerAccount1MntServiceContract1cli1);
        ContractLineItems.add(customerAccount1MntServiceContract1cli2);
        ContractLineItems.add(customerAccount1DsktServiceContract1cli1);
        ContractLineItems.add(customerAccount1DsktServiceContract1cli2);
        ContractLineItems.add(customerAccount1DsktServiceContract1cli3);
        ContractLineItems.add(customerAccount1DsktServiceContract1cli4);
        ContractLineItems.add(customerAccount1MntServiceContract2cli1);
        ContractLineItems.add(customerAccount1MntServiceContract3cli1);
        insert ContractLineItems;

        List<epartnerpricebook__c> ePriceBooks = new List<epartnerpricebook__c> ();
        ePriceBooks.add(new epartnerpricebook__c(name = 'ExhibitTypesForValidContract', DataValue__c = 'Volume Purchase;Direct Terms'));
        ePriceBooks.add(new epartnerpricebook__c(name = 'ActivePartnerContracts', DataValue__c = 'Active;Active - To Be Terminated;Active - Termination Confirmed'));
        ePriceBooks.add(new epartnerpricebook__c(name = 'ContractTypes', DataValue__c = 'DVAR;VAR Educational', DataValue1__c = 'IVAR;DVAR'));
        ePriceBooks.add(new epartnerpricebook__c(name = 'ExpertiseTypesToBeIncluded', DataValue__c = 'Specialization', DataValue1__c = 'IVAR;DVAR'));
        insert ePriceBooks;
        
        List<Account_Associations__c> accAssocs = new List<Account_Associations__c>();
        Account_Associations__c acs = new Account_Associations__c(Account__c = resellerAccount1.Id, Associated_Account__c = soldToAccount1.Id, Account_Role__c = 'Distributor');
        accAssocs.add(acs);
        insert accAssocs;
        
        List<Agreement_Renewal_Period_Setting__c> settings1 = new List<Agreement_Renewal_Period_Setting__c>();
        settings1.add(new Agreement_Renewal_Period_Setting__c(name = 'Desktop_Auto',No_Of_Days_After_EndDate__c = 30,No_Of_Days_Before_EndDate__c = 90));
        settings1.add(new Agreement_Renewal_Period_Setting__c(name = 'Desktop_Manual',No_Of_Days_After_EndDate__c = 30, No_Of_Days_Before_EndDate__c = 90));
        settings1.add(new Agreement_Renewal_Period_Setting__c(name = 'Maintenance_Auto',No_Of_Days_After_EndDate__c = 30,No_Of_Days_Before_EndDate__c = 90));
        settings1.add(new Agreement_Renewal_Period_Setting__c(name = 'Maintenance_Manual',No_Of_Days_After_EndDate__c = 30, No_Of_Days_Before_EndDate__c = 90));
        insert settings1;

        List<ROM_Notification_Email_Setting__c> settings2 = new List<ROM_Notification_Email_Setting__c>();
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Maintenance-Reminder1', No_of_Days_After_End_Date__c = -45));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Maintenance-Reminder2', No_of_Days_After_End_Date__c = -30));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Maintenance-Reminder3', No_of_Days_After_End_Date__c = -4));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Maintenance-Reminder4', No_of_Days_After_End_Date__c = 10));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Desktop-Reminder1', No_of_Days_After_End_Date__c = -45));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Desktop-Reminder2', No_of_Days_After_End_Date__c = -30));
        settings2.add(new ROM_Notification_Email_Setting__c(name = 'Desktop-Reminder3', No_of_Days_After_End_Date__c = -4));
        insert settings2;
        
        List<SAP_PaymentTermCodeValue_Map__c> settings3 = new List<SAP_PaymentTermCodeValue_Map__c>();
        settings3.add(new SAP_PaymentTermCodeValue_Map__c(name = 'test',Payment_Term__c = 'test'));
        insert settings3;

        List<ROM_RenewalOpportunitySettings__c> settings4 = new List<ROM_RenewalOpportunitySettings__c>();
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'DVARContractTypes', value__c = 'DVAR;ISV-Bundle;ISV-OEM;ISV-RealDWG;VAR Educational;VAR Government;'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'IVARContractTypes', value__c = 'IVAR;Advisor;ATC;Consultant;DMR;Estore;Etailers;Referrer;Specialty Retailer;System Integrator;'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'VADContractTypes', value__c = 'VAD;LSP;OBP;VAD Government;'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'EndCustomerTypes', value__c = 'End Customer'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'GenerationJobSuccessNotification', value__c = 'true'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'RenewalCreationJobFailureNotification', value__c = 'Email;Case;ServiceNow'));
        settings4.add(new ROM_RenewalOpportunitySettings__c(name = 'ROMGenerationJobPeriodInDays', value__c = '90'));
        
        
        insert settings4;

        List<ROM_Account__c> settings5 = new List<ROM_Account__c>();
        settings5.add(new ROM_Account__c(name = '5070100022', Type__c = 'No Dealer'));
        settings5.add(new ROM_Account__c(name = '5070100025', Type__c = 'Contact Autodesk'));
        insert settings5;
        
        //create POSA Custom Setting for the Account Country
        // this Sales Org should be present in the Product SKU Org-Status field
        Country_SalesOrg_Mapping__c posa = new Country_SalesOrg_Mapping__c();
        posa.Name = 'United States';
        posa.Country_Code__c = 'US';
        posa.SalesOrg__c = '3000';
        database.insert(posa,false);
        
        List<NurturingDiscountSettings__c> nad = setNadData();
        
        //Setup data for Maestro.
        List<RenewalReminder__c>  renewalReminders= new List<RenewalReminder__c>();
        renewalReminders.add(new RenewalReminder__c(name='Reminder-1', NumberOfDays__c= (-145) ));
        renewalReminders.add(new RenewalReminder__c(name='Reminder-2', NumberOfDays__c= (-130) ));
        renewalReminders.add(new RenewalReminder__c(name='Reminder-3', NumberOfDays__c= (-14) ));
        renewalReminders.add(new RenewalReminder__c(name='Additional Reminder-1', NumberOfDays__c= (-120) ));
        renewalReminders.add(new RenewalReminder__c(name='Additional Reminder-2', NumberOfDays__c= (-110) ));
        
        insert renewalReminders;
        
        Maestro_BatchResponseWrapper masWrap=new Maestro_BatchResponseWrapper();
        List<String> successList=masWrap.getRenewalSuccessIds();
        List<String> failureList=masWrap.getRenewalFailedIds();
        string error=masWrap.getErrorMessage();
            
        List<RenewalReminderMapping__c>  renewalReminderMappings= new List<RenewalReminderMapping__c>();
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=false));// false
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
       
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=false));// false
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Maintenance', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
        
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Low', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=false));// false
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='High', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
        
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(0).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(1).Id,Send_Reminder__c=false));// false
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(2).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(3).Id,Send_Reminder__c=true));
        renewalReminderMappings.add(new RenewalReminderMapping__c( Contract_Type__c='Subscription', Target_Email_Template_Name__c='MT_LOW_RR2', EWS_Score__c='Unknown', RenewalReminder__c=renewalReminders.get(4).Id,Send_Reminder__c=true));
        
        
        insert renewalReminderMappings;
                
        list<EWSMappings__c> ewslist=new list<EWSMappings__c>();
        EWSMappings__c e1=new EWSMappings__c();
        e1.name='Very High Risk';
        e1.EWS_Score__c='High';
        ewslist.add(e1);
        EWSMappings__c e2=new EWSMappings__c();
        e2.name='High Risk';
        e2.EWS_Score__c='High';
        ewslist.add(e2);
        EWSMappings__c e3=new EWSMappings__c();
        e3.name='Medium Risk';
        e3.EWS_Score__c='High';
        ewslist.add(e3);
        EWSMappings__c e4=new EWSMappings__c();
        e4.name='Low Risk';
        e4.EWS_Score__c='Low';
        ewslist.add(e4);
        EWSMappings__c e5=new EWSMappings__c();
        e5.name='Very Low Risk';
        e5.EWS_Score__c='Low';
        ewslist.add(e5);
        insert ewslist; 
        
    }

    //Querying Contract_Line_Item__c
    static testMethod void testROMGenerateRenewalOpportunityBatchSuccess1() {
        Test.startTest();
        List<ContractLineItem> lineItemList = [Select Id, Asset__c from ContractLineItem Order by ServiceContract.Agreement_Number__c, Asset__r.Asset_Number__c];
        ROM_GenerateRenewalOpportunityBatch r = new ROM_GenerateRenewalOpportunityBatch('id = ' + '\'' + lineItemList[0].Id + '\'','ContractLineItem');
        r = new ROM_GenerateRenewalOpportunityBatch('','Batch_Staging_Table_Record__c',true);
        Database.executeBatch(r,200);
        Test.stopTest(); 

        List<Batch_Transaction_Log__c> logs = [select Id, Error_Message__c, Error_Type__c from Batch_Transaction_Log__c] ;
        List<Opportunity> oppList = [Select Id, name, Service_Contract__r.Agreement_Number__c, Partner_Account__r.Account_CSN__c, SoldToAccount__r.Account_CSN__c, Asset_End_Date__c, Renewal_Status__c, (Select Id, Renewal_Status__c from OpportunityLineItems) from Opportunity where RecordType.Name = 'Renewal Opportunity'];
        System.assertEquals(4,oppList.size(), 'Expected Opportunityies have not been created : ' + logs);
    }

    //Querying Asset__c
    static testMethod void testROMGenerateRenewalOpportunityBatchSuccess2() {
        Test.startTest();
        List<ContractLineItem> lineItemList = [Select Id, Asset__c from ContractLineItem Order by ServiceContract.Agreement_Number__c, Asset__r.Asset_Number__c];
        ROM_GenerateRenewalOpportunityBatch r = new ROM_GenerateRenewalOpportunityBatch('','Asset__c');
        r = new ROM_GenerateRenewalOpportunityBatch('','Batch_Staging_Table_Record__c');
        Database.executeBatch(r,200);
        Test.stopTest(); 

        List<Batch_Transaction_Log__c> logs = [select Id, Error_Message__c, Error_Type__c from Batch_Transaction_Log__c] ;
        List<Opportunity> oppList = [Select Id, name, Service_Contract__r.Agreement_Number__c, Partner_Account__r.Account_CSN__c, SoldToAccount__r.Account_CSN__c, Asset_End_Date__c, Renewal_Status__c, (Select Id, Renewal_Status__c from OpportunityLineItems) from Opportunity where RecordType.Name = 'Renewal Opportunity' order by Service_Contract__r.Agreement_Number__c, Partner_Account__r.Account_CSN__c, SoldToAccount__r.Account_CSN__c, Asset_End_Date__c];
        System.assertEquals(1,oppList.size(), 'Expected Opportunityies have not been created : ' + logs);
    }

    //Querying Batch_Staging_Table_Record__c
    static testMethod void testROMGenerateRenewalOpportunityBatchSuccess3() {
        Test.startTest();
        List<ContractLineItem> lineItemList = [Select Id, Asset__c from ContractLineItem Order by ServiceContract.Agreement_Number__c, Asset__r.Asset_Number__c];
        List<Batch_Staging_Table_Record__c> bsts = new List<Batch_Staging_Table_Record__c>();
        for(ContractLineItem cli : lineItemList) {
            bsts.add(new Batch_Staging_Table_Record__c(Job_Name__c = 'Renewal Opportunity Creation', Record_Id__c = cli.Id, Type__c = 'ContractLineItem'));
        }
        insert bsts;
        ROM_GenerateRenewalOpportunityBatch r = new ROM_GenerateRenewalOpportunityBatch('','Batch_Staging_Table_Record__c',true);
        r = new ROM_GenerateRenewalOpportunityBatch('','Batch_Staging_Table_Record__c');
        Database.executeBatch(r,200);

        Test.stopTest(); 
        List<Opportunity> oppList = [Select Id, name, Service_Contract__r.Agreement_Number__c, Partner_Account__r.Account_CSN__c, SoldToAccount__r.Account_CSN__c, Asset_End_Date__c, Renewal_Status__c, (Select Id, Renewal_Status__c from OpportunityLineItems) from Opportunity where RecordType.Name = 'Renewal Opportunity' order by Service_Contract__r.Agreement_Number__c, Partner_Account__r.Account_CSN__c, SoldToAccount__r.Account_CSN__c, Asset_End_Date__c];
        List<Batch_Transaction_Log__c> logs = [select Id, Error_Message__c, Error_Type__c from Batch_Transaction_Log__c] ;
        System.assertEquals(4,oppList.size(), 'Expected Opportunityies have not been created : ' + logs);
    }

    static testMethod void testROMGenerateRenewalOpportunityBatchError() {
        Test.startTest();
        try {
            ROM_GenerateRenewalOpportunityBatch r = new ROM_GenerateRenewalOpportunityBatch('','Error');
        } catch(Exception e) {
            System.assertEquals('Query cannot be blank', e.getMessage());
        }

        Asset__c ast = [Select Id, Part_Number__c from Asset__c where Asset_Number__c = '6666666666666' limit 1];
        ast.Part_Number__c = 'Pepe Blah Blah';//Random String to get 'Renewal Sku Not Available' error
        update ast;

        ROM_GenerateRenewalOpportunityBatch r = new ROM_GenerateRenewalOpportunityBatch('','',true);
        Database.executeBatch(r,200);
        Test.stopTest(); 
        List<Batch_Transaction_Log__c> logs = [select Id, Error_Message__c, Error_Type__c from Batch_Transaction_Log__c where Error_Type__c = 'NO_SKU_ERROR'] ;
        System.assert(logs.size() > 0, 'Expected error logs not found');
    }
    
    /*
    The data is setup as below,
    
    Contract Data : 
    
    Agreement 1 :
    Agreement Number - 1-1111111111; End Date - System.today() + 30; Type - Maintenance; Account CSN - custAc1CSN
    ContractLineItems :
    Asset Number - 1111111111111; Serial Number - 111-111111111; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - soldAc1CSN; Entitlement - Gold
    Asset Number - 2222222222222; Serial Number - 222-222222222; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - soldAc1CSN; Entitlement - Gold
    
    Agreement 2 - 
    Agreement Number - 2-2222222222; EndDate - System.today() + 30; Type - Desktop; Account CSN - custAc1CSN
    ContractLineItems
    Asset Number - 5555555555555; Serial Number - 555-555555555; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - resAc2CSN; Entitlement - Gold
    Asset Number - 6666666666666; Serial Number - 666-666666666; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - soldAc1CSN; Entitlement - Gold
    Asset Number - 4444444444444; Serial Number - 444-444444444; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - soldAc1CSN; Entitlement - Gold
    Asset Number - 3333333333333; Serial Number - 333-333333333; Actual End Date - system.today() + 30; Reseller Account CSN - resAc1CSN; SoldTo Account CSN - soldAc1CSN; Entitlement - Gold
    
    Agreement 3 - 
    Agreement Number - 3-3333333333; EndDate - System.today() + 30; Type - Maintenance Account CSN - custAc2CSN
    
    Agreement 4 - 
    Agreement Number - 4-444444444444; EndDate - system.today() + 20; Type - Maintenance; Account CSN - custAc1CSN
    ContractLineItems
    Asset Number - 1111111111111; Serial Number - 111-111111111; Actual End Date - system.today() + 20; Entitlement - Gold
    
    Agreement 5 - 
    Agreement Number - 5-5555555555555; EndDate - System.today() + 20; Type - Maintenance; Account CSN - custAc1CSN
    ContractLineItems 
    Asset Number - 8888888888888; Serial Number - 888-888888888; Actual End Date - system.today() + 20; Entitlement - Gold
    */
    
    static List<NurturingDiscountSettings__c> setNadData (){
        //added for NAD nurturing test data setup      
        List<NurturingDiscountSettings__c> ctypes = new List<NurturingDiscountSettings__c>();
        NurturingDiscountSettings__c ct1 = new  NurturingDiscountSettings__c(Name = 'AllowedContractTypes', Value__c='VAD,LSP,DVAR,IVAR,DMR,eTailer');
        ctypes.add(ct1);
        insert ctypes;
        return ctypes;
    }
}
